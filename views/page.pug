- var buildings = ["Blue1-2", "Blue3", "Orange0", "Orange1", "Orange2", "Red11", "Red2", "Red3"];
doctype
html
	head
		title= "EUDC 2016 RoomTracker"
		script(src='/jquery.js')
		script(src='http://localhost:8080/socket.io/socket.io.js')
		script(src='zepto.min.js')
		script(src='jqt.js')
		script(src='initialise.js')
		script(src='roomtrack.js')
		link(href='jqtouch.css', rel='stylesheet')
	body
		#jqt
			#about.selectable
				p 
					img(src= "jqtouch.png")
				p <strong>jQTouch</strong><br>Version 1.0 beta<br>
				p <br><br><a href="#" class="grayButton goback">Close</a></p>

			#home.current
				.toolbar
					|<h1>RoomTracker</h1>
					|<a class="button slideup" id="infoButton" href="#about">About</a>
				.scroll
					ul.rounded
						each val in buildings
							li.arrow= Room
								a(href='#' + val) #{val}
					|<h2>External Links</h2>
				.info
					p Add this page to your home screen for a richer experience

			#Blue1-2
				.toolbar
					|<h1>RoomTracker</h1>
					a.back(href="#home") Home
				.scroll
					ul.rounded
						- console.log(pageData[6])
						each val in pageData[0]
							li.arrow= Room
								a(class="roomtrack " + val.status)(href='#', roomname= val.roomname) #{val.roomname}
									case val.status
										when noDebate 
										when 'in': small.counter Debating
										when 'out': small.counter Out
										when 'ballotgot': small.counter Ballot
					|<h2>External Links</h2>
				.info
					p Add this page to your home screen for a richer experience

			#Blue3
				.toolbar
					|<h1>RoomTracker</h1>
					a.back(href="#home") Home
				.scroll
					ul.rounded
						each val in pageData[1]
							li.arrow= Room
								a(class="roomtrack " + val.status)(href='#', roomname= val.roomname) #{val.roomname}
									case val.status
										when noDebate 
										when 'in': small.counter Debating
										when 'out': small.counter Out
										when 'ballotgot': small.counter Ballot
					|<h2>External Links</h2>
				.info
					p Add this page to your home screen for a richer experience

			#Orange0
				.toolbar
					|<h1>RoomTracker</h1>
					a.back(href="#home") Home
				.scroll
					ul.rounded
						each val in pageData[2]
							li.arrow= Room
								a(class="roomtrack " + val.status)(href='#', roomname= val.roomname) #{val.roomname}
									case val.status
										when noDebate 
										when 'in': small.counter Debating
										when 'out': small.counter Out
										when 'ballotgot': small.counter Ballot
					|<h2>External Links</h2>
				.info
					p Add this page to your home screen for a richer experience

			#Orange1
				.toolbar
					|<h1>RoomTracker</h1>
					a.back(href="#home") Home
				.scroll
					ul.rounded
						each val in pageData[3]
							li.arrow= Room
								a(class="roomtrack " + val.status)(href='#', roomname= val.roomname) #{val.roomname}
									case val.status
										when noDebate 
										when 'in': small.counter Debating
										when 'out': small.counter Out
										when 'ballotgot': small.counter Ballot
					|<h2>External Links</h2>
				.info
					p Add this page to your home screen for a richer experience

			#Orange2
				.toolbar
					|<h1>RoomTracker</h1>
					a.back(href="#home") Home
				.scroll
					ul.rounded
						each val in pageData[4]
							li.arrow= Room
								a(class="roomtrack " + val.status)(href='#', roomname= val.roomname) #{val.roomname}
									case val.status
										when noDebate 
										when 'in': small.counter Debating
										when 'out': small.counter Out
										when 'ballotgot': small.counter Ballot
					|<h2>External Links</h2>
				.info
					p Add this page to your home screen for a richer experience

			#Red11
				.toolbar
					|<h1>RoomTracker</h1>
					a.back(href="#home") Home
				.scroll
					ul.rounded
						each val in pageData[5]
							li.arrow= Room
								a(class="roomtrack " + val.status)(href='#', roomname= val.roomname) #{val.roomname}
									case val.status
										when noDebate 
										when 'in': small.counter Debating
										when 'out': small.counter Out
										when 'ballotgot': small.counter Ballot
					|<h2>External Links</h2>
				.info
					p Add this page to your home screen for a richer experience

			#Red2
				.toolbar
					|<h1>RoomTracker</h1>
					a.back(href="#home") Home
				.scroll
					ul.rounded
						each val in pageData[6]
							li.arrow= Room
								a(class="roomtrack " + val.status)(href='#', roomname= val.roomname) #{val.roomname}
									case val.status
										when noDebate 
										when 'in': small.counter Debating
										when 'out': small.counter Out
										when 'ballotgot': small.counter Ballot
					|<h2>External Links</h2>
				.info
					p Add this page to your home screen for a richer experience

			#Red3
				.toolbar
					|<h1>RoomTracker</h1>
					a.back(href="#home") Home
				.scroll
					ul.rounded
						each val in pageData[7]
							li.arrow= Room
								a(class="roomtrack " + val.status)(href='#', roomname= val.roomname) #{val.roomname}
									case val.status
										when noDebate 
										when 'in': small.counter Debating
										when 'out': small.counter Out
										when 'ballotgot': small.counter Ballot
					|<h2>External Links</h2>
				.info
					p Add this page to your home screen for a richer experience

			#All
				.toolbar
					|<h1>RoomTracker</h1>
					a.back(href="#home") Home
				.scroll
					ul.rounded
						each val in pageData[0]
								li.arrow= Room
									a(class="roomtrack " + val.status)(href='#', roomname= val.roomname) #{val.roomname}
										case val.status
											when noDebate 
											when 'in': small.counter Debating
											when 'out': small.counter Out
											when 'ballotgot': small.counter Ballot
						each val in pageData[1]
								li.arrow= Room
									a(class="roomtrack " + val.status)(href='#', roomname= val.roomname) #{val.roomname}
										case val.status
											when noDebate 
											when 'in': small.counter Debating
											when 'out': small.counter Out
											when 'ballotgot': small.counter Ballot
						each val in pageData[2]
								li.arrow= Room
									a(class="roomtrack " + val.status)(href='#', roomname= val.roomname) #{val.roomname}
										case val.status
											when noDebate 
											when 'in': small.counter Debating
											when 'out': small.counter Out
											when 'ballotgot': small.counter Ballot
						each val in pageData[3]
								li.arrow= Room
									a(class="roomtrack " + val.status)(href='#', roomname= val.roomname) #{val.roomname}
										case val.status
											when noDebate 
											when 'in': small.counter Debating
											when 'out': small.counter Out
											when 'ballotgot': small.counter Ballot
						each val in pageData[4]
								li.arrow= Room
									a(class="roomtrack " + val.status)(href='#', roomname= val.roomname) #{val.roomname}
										case val.status
											when noDebate 
											when 'in': small.counter Debating
											when 'out': small.counter Out
											when 'ballotgot': small.counter Ballot
						each val in pageData[5]
								li.arrow= Room
									a(class="roomtrack " + val.status)(href='#', roomname= val.roomname) #{val.roomname}
										case val.status
											when noDebate 
											when 'in': small.counter Debating
											when 'out': small.counter Out
											when 'ballotgot': small.counter Ballot
						each val in pageData[6]
								li.arrow= Room
									a(class="roomtrack " + val.status)(href='#', roomname= val.roomname) #{val.roomname}
										case val.status
											when noDebate 
											when 'in': small.counter Debating
											when 'out': small.counter Out
											when 'ballotgot': small.counter Ballot
						each val in pageData[7]
							li.arrow= Room
								a(class="roomtrack " + val.status)(href='#', roomname= val.roomname) #{val.roomname}
									case val.status
										when noDebate 
										when 'in': small.counter Debating
										when 'out': small.counter Out
										when 'ballotgot': small.counter Ballot
					|<h2>External Links</h2>
				.info
					p Admins only